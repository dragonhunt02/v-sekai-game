name: Automated Tagging
on:
  push
  #schedule:
   # - cron: "00 12 */5 * *"

jobs:
  test_timestamp:
    name: Test schedule
    runs-on: ubuntu-latest
    env:
      MODE: 'disabled'
      # smart: Auto Tag release every 5 days if no new commits
      # timed: Auto Tag release every 5 days
      # disabled: Auto Tag disable
    outputs:
      TIMESTAMP: ${{ steps.timestamp.outputs.TIMESTAMP }}
      TAG_PUSH: ${{ steps.check-timestamp.outputs.cache-hit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'

      - name: Set timestamp
        id: timestamp
        run: |
          TIMESTAMP="$(git log -1 --format=%ct)"
          echo "TIMESTAMP=${TIMESTAMP}" >> ${GITHUB_OUTPUT}

      - name: Check Timestamp
        id: check-timestamp
        uses: actions/cache@v1
        with:
          path: last-timestamp
          key: last-timestamp-1735228784
          #${{ steps.timestamp.outputs.TIMESTAMP }}

      - name: Tag check
        run: |
          if [ ${{ env.MODE }} == 'smart' ] \
          && [ ${{ steps.check-timestamp.outputs.cache-hit }} == 'true' ] \
          && [ -n "$(git tag -l --contains HEAD)" ]; then \
            TAG_PUSH=true; \
          fi
          
          if [ ${{ env.MODE }} == 'timed' ]; then \
            TAG_PUSH=true; \
          fi

          if [ ${{ env.MODE }} == 'disabled' ]; then \
            TAG_PUSH=false; \
          fi
          
          echo "TAG_PUSH=${TAG_PUSH}" >> ${GITHUB_OUTPUT}

      - name: Create cache file
        run: |
          if [ -f 'last-timestamp/timestamp.txt' ]; then \
            echo "Previous timestamp found";\
            PREV_TIMESTAMP="$( cat last-timestamp/version.txt | tr -d "\n" )"; \
          else \
            PREV_TIMESTAMP=""; \
          fi
          echo "Previous ${PREV_TIMESTAMP}"
          if [ "${TIMESTAMP}" != "${PREV_TIMESTAMP}" ]; then \
            echo "Timestamp changed"; \
            mkdir -p last-timestamp; \
            TIMESTAMP="$(git log -1 --format=%ct)"; \
            echo "${TIMESTAMP}" > timestamp.txt; \
          fi

  tag:
    runs-on: ubuntu-latest
    needs: test_timestamp
    if: ${{ needs.test_timestamp.outputs.TAG_PUSH == 'true' }}
    steps:
      - uses: actions/checkout@v2
      - name: Create Tag
        run: |
          echo "Create Tag..."
          #git config --local user.email "action@github.com"
          #git config --local user.name "GitHub Action"
          #git tag -a "v${{ github.run_number }}" -m "Release v${{ github.run_number }}"
          #git push origin "v${{ github.run_number }}"

