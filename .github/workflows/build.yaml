name: Build Platform Target

on:
  repository_dispatch:
    types: ['build-ready']
  push:
    branches: ['gh-test']

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ITCH_IO_PUBLISH: 'false'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:  
      #- name: Checkout
      #  uses: actions/checkout@v4

      - name: Set env
        run: |
          echo "GITHUB_REV=${{ github.event.repository.name }}" >> "$GITHUB_ENV"
          #echo "GITHUB_TAG=$( echo $(git describe --tags --abbrev=0) )" >> $GITHUB_ENV

      - name: Test
        run: |
          echo "Github event -  ${GITHUB_REV}"
          #echo "Github tag - ${GITHUB_TAG}"
          touch test.txt && echo 'test'>>test.txt
          touch test.txt && echo 'test'>>test_f0.8fff_linux
          touch test.txt && echo 'test'>>test_0.5ffff_windows.txt
          touch test.txt && echo 'test'>>test_0.2.2_Mac_editor4aaa.txt
          echo "Github event -  ${{ github.event.client_payload.commit_sha }}"

      - name: Docker build project
        uses: ./docker/build-project
        with:
          godot_rev: ${{ github.event.client_payload.commit_sha }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: v-sekai-release
          path: ${{ github.workspace }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/gh-test' #Change to main
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest.v-sekai-editor-${{ github.run_number }}
          release_name: Latest Release of V-Sekai Game
          draft: false
          prerelease: true

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: v-sekai-release
          name: v-sekai-release

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Tag release ${GITHUB_TAG}"
          cd v-sekai-release
          echo "Upload to ${{ steps.create_release.outputs.upload_url }}"
          for file in *; do \
          echo "Uploading $file..."; \
          curl -v -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${GITHUB_TOKEN}" \
          -H "Content-Type: application/octet-stream" \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=${file}" \
          --data-binary "@${file}"; \
          done

  itch-enabled: # Workaround for 'job.if' lack of env context variable
    runs-on: ubuntu-latest
    needs: build
    outputs:
      enabled: ${{ steps.init.outputs.status }}
    steps:
      - name: Confirm Itch.io release 
        id: init
        run: |
          echo "status=${{ env.ITCH_IO_PUBLISH }}" >> $GITHUB_OUTPUT

  itch-upload:
    runs-on: ubuntu-latest
    needs: [build, itch-enabled]

    # Publish only on v-sekai-game update
    if: needs.itch-enabled.outputs.enabled == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/gh-test'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/v-sekai-release
          name: v-sekai-release

      - name: Docker Itch.io Publish
        uses: ./docker/itch-io
        with:
          api_key: ${{ secrets.ITCH_IO_API_KEY }}
          filepath: v-sekai-release
          itchio_project: projectname
          release_version: 0.0.1
